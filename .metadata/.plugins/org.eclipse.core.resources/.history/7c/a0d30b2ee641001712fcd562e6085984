package Loader;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.LinkedList;

public class TvzCSVLoader implements ILoader {
	private int n;
	private String fileName;

	public TvzCSVLoader(String fileName, int n) {
		this.fileName = System.getProperty("user.dir") + fileName;
		this.n = n;
	}

	@Override
	public LinkedList<PrometData> Load(String[] onlyLoad) {
		LinkedList<PrometData> promet = new LinkedList<PrometData>();

		try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
			String line;
			int validanPromet=0;
			int validanOdgovor=0;
			int validanPromet=0;
			while ((line = br.readLine()) != null) {
				String[] parsedLine = line.split(";");
				PrometData linijaPrometa = new PrometData();
				// System.out.print(parsedLine[0]);
				// System.out.print(parsedLine[1]);
				// System.out.print(parsedLine[2]);
				// System.out.print(parsedLine[3]);
				// System.out.print(parsedLine[4]);
				// System.out.print(parsedLine[5]);
				// System.out.print(parsedLine[6]);
				// System.out.print("\n");
				boolean loadOk = false;
				for (String vrsteLoad : onlyLoad) {
					if (vrsteLoad.equals(parsedLine[8])) {
						loadOk = true;
					}
				}
				if (loadOk) {
					linijaPrometa.Vrsta = parsedLine[8];
					linijaPrometa.SEQ = parsedLine[9];
					linijaPrometa.ASEQ = Integer.parseInt(parsedLine[10]);
					linijaPrometa.SourceIP = parsedLine[12];
					linijaPrometa.SourcePort = parsedLine[13];
					linijaPrometa.DestinationIP = parsedLine[14];
					linijaPrometa.DestinationPort = parsedLine[15];
					promet.addLast(linijaPrometa);
					if(linijaPrometa.Vrsta.equals("SYC-ACK")){
						
					}else if(linijaPrometa.Vrsta.equals("SYC-ACK")){
						
					}else{
						
					}
				}
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		return promet;

	}

}
